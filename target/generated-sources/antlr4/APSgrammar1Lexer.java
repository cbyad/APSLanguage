// Generated from APSgrammar1.g4 by ANTLR 4.4

	package antlr4;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class APSgrammar1Lexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__26=1, T__25=2, T__24=3, T__23=4, T__22=5, T__21=6, T__20=7, T__19=8, 
		T__18=9, T__17=10, T__16=11, T__15=12, T__14=13, T__13=14, T__12=15, T__11=16, 
		T__10=17, T__9=18, T__8=19, T__7=20, T__6=21, T__5=22, T__4=23, T__3=24, 
		T__2=25, T__1=26, T__0=27, IDENT=28, NUM=29, SPACE=30, ESC=31, LINE_COMMENT=32, 
		COMMENT=33;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'"
	};
	public static final String[] ruleNames = {
		"T__26", "T__25", "T__24", "T__23", "T__22", "T__21", "T__20", "T__19", 
		"T__18", "T__17", "T__16", "T__15", "T__14", "T__13", "T__12", "T__11", 
		"T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", 
		"T__1", "T__0", "IDENT", "NUM", "SPACE", "ESC", "LINE_COMMENT", "COMMENT"
	};


	public APSgrammar1Lexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "APSgrammar1.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2#\u00d8\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3"+
		"\5\3\5\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\13"+
		"\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17"+
		"\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23\3\24\3\24"+
		"\3\24\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27"+
		"\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\32\3\32\3\32\3\32\3\33\3\33\3\33"+
		"\3\33\3\34\3\34\3\34\3\34\3\35\3\35\7\35\u00a7\n\35\f\35\16\35\u00aa\13"+
		"\35\3\36\5\36\u00ad\n\36\3\36\6\36\u00b0\n\36\r\36\16\36\u00b1\3\37\6"+
		"\37\u00b5\n\37\r\37\16\37\u00b6\3\37\3\37\3 \3 \3 \3!\3!\3!\3!\7!\u00c2"+
		"\n!\f!\16!\u00c5\13!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\7\"\u00cf\n\"\f\"\16"+
		"\"\u00d2\13\"\3\"\3\"\3\"\3\"\3\"\2\2#\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21"+
		"\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30"+
		"/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#\3\2\n\5\2C\\aac|\6\2\62"+
		";C\\aac|\3\2\62;\5\2\13\f\17\17\"\"\7\2$$^^ppttvv\4\2\f\f\17\17\3\2\61"+
		"\61\3\2,,\u00de\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3"+
		"\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2"+
		"\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3"+
		"\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2"+
		"\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\2"+
		"9\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\3E\3"+
		"\2\2\2\5K\3\2\2\2\7P\3\2\2\2\tR\3\2\2\2\13U\3\2\2\2\rY\3\2\2\2\17]\3\2"+
		"\2\2\21`\3\2\2\2\23b\3\2\2\2\25d\3\2\2\2\27f\3\2\2\2\31l\3\2\2\2\33p\3"+
		"\2\2\2\35s\3\2\2\2\37w\3\2\2\2!y\3\2\2\2#{\3\2\2\2%\177\3\2\2\2\'\u0081"+
		"\3\2\2\2)\u0086\3\2\2\2+\u0089\3\2\2\2-\u008f\3\2\2\2/\u0092\3\2\2\2\61"+
		"\u0096\3\2\2\2\63\u0098\3\2\2\2\65\u009c\3\2\2\2\67\u00a0\3\2\2\29\u00a4"+
		"\3\2\2\2;\u00ac\3\2\2\2=\u00b4\3\2\2\2?\u00ba\3\2\2\2A\u00bd\3\2\2\2C"+
		"\u00c8\3\2\2\2EF\7Y\2\2FG\7J\2\2GH\7K\2\2HI\7N\2\2IJ\7G\2\2J\4\3\2\2\2"+
		"KL\7v\2\2LM\7t\2\2MN\7w\2\2NO\7g\2\2O\6\3\2\2\2PQ\7=\2\2Q\b\3\2\2\2RS"+
		"\7K\2\2ST\7H\2\2T\n\3\2\2\2UV\7X\2\2VW\7C\2\2WX\7T\2\2X\f\3\2\2\2YZ\7"+
		"k\2\2Z[\7p\2\2[\\\7v\2\2\\\16\3\2\2\2]^\7g\2\2^_\7s\2\2_\20\3\2\2\2`a"+
		"\7*\2\2a\22\3\2\2\2bc\7,\2\2c\24\3\2\2\2de\7.\2\2e\26\3\2\2\2fg\7h\2\2"+
		"gh\7c\2\2hi\7n\2\2ij\7u\2\2jk\7g\2\2k\30\3\2\2\2lm\7c\2\2mn\7f\2\2no\7"+
		"f\2\2o\32\3\2\2\2pq\7/\2\2qr\7@\2\2r\34\3\2\2\2st\7u\2\2tu\7w\2\2uv\7"+
		"d\2\2v\36\3\2\2\2wx\7<\2\2x \3\2\2\2yz\7]\2\2z\"\3\2\2\2{|\7o\2\2|}\7"+
		"w\2\2}~\7n\2\2~$\3\2\2\2\177\u0080\7_\2\2\u0080&\3\2\2\2\u0081\u0082\7"+
		"d\2\2\u0082\u0083\7q\2\2\u0083\u0084\7q\2\2\u0084\u0085\7n\2\2\u0085("+
		"\3\2\2\2\u0086\u0087\7q\2\2\u0087\u0088\7t\2\2\u0088*\3\2\2\2\u0089\u008a"+
		"\7E\2\2\u008a\u008b\7Q\2\2\u008b\u008c\7P\2\2\u008c\u008d\7U\2\2\u008d"+
		"\u008e\7V\2\2\u008e,\3\2\2\2\u008f\u0090\7n\2\2\u0090\u0091\7v\2\2\u0091"+
		".\3\2\2\2\u0092\u0093\7f\2\2\u0093\u0094\7k\2\2\u0094\u0095\7x\2\2\u0095"+
		"\60\3\2\2\2\u0096\u0097\7+\2\2\u0097\62\3\2\2\2\u0098\u0099\7c\2\2\u0099"+
		"\u009a\7p\2\2\u009a\u009b\7f\2\2\u009b\64\3\2\2\2\u009c\u009d\7p\2\2\u009d"+
		"\u009e\7q\2\2\u009e\u009f\7v\2\2\u009f\66\3\2\2\2\u00a0\u00a1\7U\2\2\u00a1"+
		"\u00a2\7G\2\2\u00a2\u00a3\7V\2\2\u00a38\3\2\2\2\u00a4\u00a8\t\2\2\2\u00a5"+
		"\u00a7\t\3\2\2\u00a6\u00a5\3\2\2\2\u00a7\u00aa\3\2\2\2\u00a8\u00a6\3\2"+
		"\2\2\u00a8\u00a9\3\2\2\2\u00a9:\3\2\2\2\u00aa\u00a8\3\2\2\2\u00ab\u00ad"+
		"\7/\2\2\u00ac\u00ab\3\2\2\2\u00ac\u00ad\3\2\2\2\u00ad\u00af\3\2\2\2\u00ae"+
		"\u00b0\t\4\2\2\u00af\u00ae\3\2\2\2\u00b0\u00b1\3\2\2\2\u00b1\u00af\3\2"+
		"\2\2\u00b1\u00b2\3\2\2\2\u00b2<\3\2\2\2\u00b3\u00b5\t\5\2\2\u00b4\u00b3"+
		"\3\2\2\2\u00b5\u00b6\3\2\2\2\u00b6\u00b4\3\2\2\2\u00b6\u00b7\3\2\2\2\u00b7"+
		"\u00b8\3\2\2\2\u00b8\u00b9\b\37\2\2\u00b9>\3\2\2\2\u00ba\u00bb\7^\2\2"+
		"\u00bb\u00bc\t\6\2\2\u00bc@\3\2\2\2\u00bd\u00be\7\61\2\2\u00be\u00bf\7"+
		"\61\2\2\u00bf\u00c3\3\2\2\2\u00c0\u00c2\n\7\2\2\u00c1\u00c0\3\2\2\2\u00c2"+
		"\u00c5\3\2\2\2\u00c3\u00c1\3\2\2\2\u00c3\u00c4\3\2\2\2\u00c4\u00c6\3\2"+
		"\2\2\u00c5\u00c3\3\2\2\2\u00c6\u00c7\b!\2\2\u00c7B\3\2\2\2\u00c8\u00c9"+
		"\7\61\2\2\u00c9\u00ca\7,\2\2\u00ca\u00d0\3\2\2\2\u00cb\u00cc\7,\2\2\u00cc"+
		"\u00cf\n\b\2\2\u00cd\u00cf\n\t\2\2\u00ce\u00cb\3\2\2\2\u00ce\u00cd\3\2"+
		"\2\2\u00cf\u00d2\3\2\2\2\u00d0\u00ce\3\2\2\2\u00d0\u00d1\3\2\2\2\u00d1"+
		"\u00d3\3\2\2\2\u00d2\u00d0\3\2\2\2\u00d3\u00d4\7,\2\2\u00d4\u00d5\7\61"+
		"\2\2\u00d5\u00d6\3\2\2\2\u00d6\u00d7\b\"\2\2\u00d7D\3\2\2\2\n\2\u00a8"+
		"\u00ac\u00b1\u00b6\u00c3\u00ce\u00d0\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}